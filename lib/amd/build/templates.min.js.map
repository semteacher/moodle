{"version":3,"sources":["../src/templates.js"],"names":["define","mustache","$","ajax","str","notification","coreurl","config","storage","IconSystem","event","Y","Log","Truncate","UserDate","Pending","uniqInstances","templateCache","templatePromises","cachePartialPromises","iconSystem","loadTemplateBuffer","isLoadingTemplates","getTemplatePromiseFromCache","searchKey","Deferred","resolve","promise","cached","get","processLoadTemplateBuffer","length","templatesToLoad","slice","serverRequestsDeferred","requests","map","templateData","component","name","theme","templateDeferred","deferred","cachedPromise","push","methodname","args","template","themename","lang","attr","replace","index","then","promises","response","templateSource","templates","forEach","data","tempSearchKey","join","value","set","strings","cache_strings","key","source","catch","error","reject","call","M","cfg","themerev","when","apply","splice","Renderer","requiredStrings","requiredJS","requiredDates","currentThemeName","prototype","getTemplate","templateName","currentTheme","existingBufferRecords","filter","record","parts","split","shift","partialHelper","exception","Error","renderIcon","title","modulename","iconsystemmodule","ready","require","System","system","init","getTemplateName","bind","pixHelper","context","sectionText","helper","text","trim","jsHelper","stringHelper","param","indexOf","JSON","parse","quoteHelper","content","shortenTextHelper","regex","match","truncate","words","ellipsis","userDateHelper","timestamp","format","addHelpers","themeName","uniqid","pix","js","quote","shortentext","userdate","globals","getJS","treatStringsInContent","pattern","treated","strIndex","walker","char","strFinal","search","substring","substr","parseInt","debug","treatDatesInContent","dates","date","re","RegExp","doRender","iconTemplate","pendingPromise","result","render","html","get_strings","runTemplateJS","newscript","append","domReplace","element","newHTML","newJS","replaceChildNodes","replaceNode","newNodes","yuiNodes","NodeList","children","destroy","empty","replaceWith","notifyFilterContentUpdated","scanForPartials","tokens","partials","findPartial","i","token","cachePartials","parentage","uniquePartials","partialName","fetchThemAll","iconsystem","domPrepend","node","prepend","domAppend","renderer","renderPix","replaceNodeContents","prependNodeContents","appendNodeContents"],"mappings":"AAyBAA,OAAM,kBAAC,CACC,eADD,CAEC,QAFD,CAGC,WAHD,CAIC,UAJD,CAKC,mBALD,CAMC,UAND,CAOC,aAPD,CAQC,mBARD,CASC,kBATD,CAUC,YAVD,CAWC,UAXD,CAYC,UAZD,CAaC,eAbD,CAcC,gBAdD,CAeC,cAfD,CAAD,CAiBF,SAASC,CAAT,CAAmBC,CAAnB,CAAsBC,CAAtB,CAA4BC,CAA5B,CAAiCC,CAAjC,CAA+CC,CAA/C,CAAwDC,CAAxD,CAAgEC,CAAhE,CAAyEC,CAAzE,CAAqFC,CAArF,CAA4FC,CAA5F,CAA+FC,CAA/F,CAAoGC,CAApG,CAA8GC,CAA9G,CACIC,CADJ,CACa,IAITC,CAAAA,CAAa,CAAG,CAJP,CAOTC,CAAa,CAAG,EAPP,CAUTC,CAAgB,CAAG,EAVV,CAaTC,CAAoB,CAAG,EAbd,CAgBTC,CAAU,CAAG,EAhBJ,CAmBTC,CAAkB,CAAG,EAnBZ,CAsBTC,CAAkB,GAtBT,CAkCTC,CAA2B,CAAG,SAASC,CAAT,CAAoB,CAElD,GAAIA,CAAS,GAAIN,CAAAA,CAAjB,CAAmC,CAC/B,MAAOA,CAAAA,CAAgB,CAACM,CAAD,CAC1B,CAGD,GAAIA,CAAS,GAAIP,CAAAA,CAAjB,CAAgC,CAE5BC,CAAgB,CAACM,CAAD,CAAhB,CAA8BtB,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBT,CAAa,CAACO,CAAD,CAAlC,EAA+CG,OAA/C,EAA9B,CACA,MAAOT,CAAAA,CAAgB,CAACM,CAAD,CAC1B,CAGD,GAAII,CAAAA,CAAM,CAAGpB,CAAO,CAACqB,GAAR,CAAY,iBAAmBL,CAA/B,CAAb,CACA,GAAII,CAAJ,CAAY,CAERX,CAAa,CAACO,CAAD,CAAb,CAA2BI,CAA3B,CAEAV,CAAgB,CAACM,CAAD,CAAhB,CAA8BtB,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBE,CAArB,EAA6BD,OAA7B,EAA9B,CACA,MAAOT,CAAAA,CAAgB,CAACM,CAAD,CAC1B,CAED,MAAO,KACV,CA1DY,CAmETM,CAAyB,CAAG,UAAW,CACvC,GAAI,CAACT,CAAkB,CAACU,MAAxB,CAAgC,CAC5B,MACH,CAED,GAAIT,CAAJ,CAAwB,CACpB,MACH,CAEDA,CAAkB,GAAlB,CATuC,GAWnCU,CAAAA,CAAe,CAAGX,CAAkB,CAACY,KAAnB,EAXiB,CAanCC,CAAsB,CAAGhC,CAAC,CAACuB,QAAF,EAbU,CAcnCU,CAAQ,CAAG,EAdwB,CAgBnCjB,CAAgB,CAAGc,CAAe,CAACI,GAAhB,CAAoB,SAASC,CAAT,CAAuB,IAC1DC,CAAAA,CAAS,CAAGD,CAAY,CAACC,SADiC,CAE1DC,CAAI,CAAGF,CAAY,CAACE,IAFsC,CAG1Df,CAAS,CAAGa,CAAY,CAACb,SAHiC,CAI1DgB,CAAK,CAAGH,CAAY,CAACG,KAJqC,CAK1DC,CAAgB,CAAGJ,CAAY,CAACK,QAL0B,CAM1Df,CAAO,CAAG,IANgD,CAU1DgB,CAAa,CAAGpB,CAA2B,CAACC,CAAD,CAVe,CAW9D,GAAImB,CAAJ,CAAmB,CAEfhB,CAAO,CAAGgB,CACb,CAHD,IAGO,CAGHR,CAAQ,CAACS,IAAT,CAAc,CACVC,UAAU,CAAE,6CADF,CAEVC,IAAI,CAAE,CACFR,SAAS,CAAEA,CADT,CAEFS,QAAQ,CAAER,CAFR,CAGFS,SAAS,CAAER,CAHT,CAIFS,IAAI,CAAE/C,CAAC,CAAC,MAAD,CAAD,CAAUgD,IAAV,CAAe,MAAf,EAAuBC,OAAvB,CAA+B,IAA/B,CAAqC,GAArC,CAJJ,CAFI,CAAd,EAWA,GAAIC,CAAAA,CAAK,CAAGjB,CAAQ,CAACJ,MAAT,CAAkB,CAA9B,CAIAJ,CAAO,CAAGO,CAAsB,CAACP,OAAvB,GACL0B,IADK,CACA,SAASC,CAAT,CAAmB,CAMrBpC,CAAgB,CAACM,CAAD,CAAhB,CAA8B8B,CAAQ,CAACF,CAAD,CAAR,CAAgBC,IAAhB,CAAqB,SAASE,CAAT,CAAmB,CAClE,GAAIC,CAAAA,CAAc,CAAG,IAArB,CAIAD,CAAQ,CAACE,SAAT,CAAmBC,OAAnB,CAA2B,SAASC,CAAT,CAAe,CAGtC,GAAIC,CAAAA,CAAa,CAAG,CAACpB,CAAD,CAAQmB,CAAI,CAACrB,SAAb,CAAwBqB,CAAI,CAACpB,IAA7B,EAAmCsB,IAAnC,CAAwC,GAAxC,CAApB,CAGA5C,CAAa,CAAC2C,CAAD,CAAb,CAA+BD,CAAI,CAACG,KAApC,CACAtD,CAAO,CAACuD,GAAR,CAAY,iBAAmBH,CAA/B,CAA8CD,CAAI,CAACG,KAAnD,EAEA,GAAIH,CAAI,CAACrB,SAAL,EAAkBA,CAAlB,EAA+BqB,CAAI,CAACpB,IAAL,EAAaA,CAAhD,CAAsD,CAElDiB,CAAc,CAAGG,CAAI,CAACG,KACzB,CACJ,CAbD,EAeA,GAAIP,CAAQ,CAACS,OAAT,CAAiBjC,MAArB,CAA6B,CAGzB3B,CAAG,CAAC6D,aAAJ,CAAkBV,CAAQ,CAACS,OAAT,CAAiB5B,GAAjB,CAAqB,SAASuB,CAAT,CAAe,CAClD,MAAO,CACHrB,SAAS,CAAEqB,CAAI,CAACrB,SADb,CAEH4B,GAAG,CAAEP,CAAI,CAACpB,IAFP,CAGHuB,KAAK,CAAEH,CAAI,CAACG,KAHT,CAKV,CANiB,CAAlB,CAOH,CAGD,MAAON,CAAAA,CACV,CAlC6B,CAA9B,CAoCA,MAAOtC,CAAAA,CAAgB,CAACM,CAAD,CAC1B,CA5CK,CA6Cb,CAED,MAAOG,CAAAA,CAAO,CACT0B,IADE,CACG,SAASc,CAAT,CAAiB,CAGnB,MAAO1B,CAAAA,CAAgB,CAACf,OAAjB,CAAyByC,CAAzB,CACV,CALE,EAMFC,KANE,CAMI,SAASC,CAAT,CAAgB,CAGnB5B,CAAgB,CAAC6B,MAAjB,CAAwBD,CAAxB,EAEA,KAAMA,CAAAA,CACT,CAZE,CAaV,CA5FsB,CAhBgB,CA8GvC,GAAIlC,CAAQ,CAACJ,MAAb,CAAqB,CAEjBG,CAAsB,CAACR,OAAvB,CAA+BvB,CAAI,CAACoE,IAAL,CAAUpC,CAAV,UAAwC,CAAxC,CAA2CqC,CAAC,CAACC,GAAF,CAAMC,QAAjD,CAA/B,CACH,CAHD,IAGO,CAEHxC,CAAsB,CAACR,OAAvB,EACH,CAKDxB,CAAC,CAACyE,IAAF,CAAOC,KAAP,CAAa,IAAb,CAAmB1D,CAAnB,EACKmC,IADL,CACU,UAAW,CAEbhC,CAAkB,CAACwD,MAAnB,CAA0B,CAA1B,CAA6B7C,CAAe,CAACD,MAA7C,EACAT,CAAkB,GAAlB,CACAQ,CAAyB,EAE5B,CAPL,EAQKsC,KARL,CAQW,UAAW,CAEd/C,CAAkB,CAACwD,MAAnB,CAA0B,CAA1B,CAA6B7C,CAAe,CAACD,MAA7C,EACAT,CAAkB,GAAlB,CACAQ,CAAyB,EAC5B,CAbL,CAcH,CA1MY,CAiNTgD,CAAQ,CAAG,UAAW,CACtB,KAAKC,eAAL,CAAuB,EAAvB,CACA,KAAKC,UAAL,CAAkB,EAAlB,CACA,KAAKC,aAAL,CAAqB,EAArB,CACA,KAAKC,gBAAL,CAAwB,EAC3B,CAtNY,CA0NbJ,CAAQ,CAACK,SAAT,CAAmBJ,eAAnB,CAAqC,IAArC,CAGAD,CAAQ,CAACK,SAAT,CAAmBF,aAAnB,CAAmC,EAAnC,CAGAH,CAAQ,CAACK,SAAT,CAAmBH,UAAnB,CAAgC,IAAhC,CAGAF,CAAQ,CAACK,SAAT,CAAmBD,gBAAnB,CAAsC,EAAtC,CAYAJ,CAAQ,CAACK,SAAT,CAAmBC,WAAnB,CAAiC,SAASC,CAAT,CAAuB,IAChDC,CAAAA,CAAY,CAAG,KAAKJ,gBAD4B,CAEhD1D,CAAS,CAAG8D,CAAY,CAAG,GAAf,CAAqBD,CAFe,CAKhD1C,CAAa,CAAGpB,CAA2B,CAACC,CAAD,CALK,CAMpD,GAAImB,CAAJ,CAAmB,CACf,MAAOA,CAAAA,CACV,CAGD,GAAI4C,CAAAA,CAAqB,CAAGlE,CAAkB,CAACmE,MAAnB,CAA0B,SAASC,CAAT,CAAiB,CACnE,MAAOA,CAAAA,CAAM,CAACjE,SAAP,EAAoBA,CAC9B,CAF2B,CAA5B,CAGA,GAAI+D,CAAqB,CAACxD,MAA1B,CAAkC,CAG9B,MAAOwD,CAAAA,CAAqB,CAAC,CAAD,CAArB,CAAyB7C,QAAzB,CAAkCf,OAAlC,EACV,CAlBmD,GAsBhD+D,CAAAA,CAAK,CAAGL,CAAY,CAACM,KAAb,CAAmB,GAAnB,CAtBwC,CAuBhDrD,CAAS,CAAGoD,CAAK,CAACE,KAAN,EAvBoC,CAwBhDrD,CAAI,CAAGmD,CAAK,CAAC7B,IAAN,CAAW,GAAX,CAxByC,CAyBhDnB,CAAQ,CAAGxC,CAAC,CAACuB,QAAF,EAzBqC,CA4BpDJ,CAAkB,CAACuB,IAAnB,CAAwB,CACpBN,SAAS,CAAEA,CADS,CAEpBC,IAAI,CAAEA,CAFc,CAGpBC,KAAK,CAAE8C,CAHa,CAIpB9D,SAAS,CAAEA,CAJS,CAKpBkB,QAAQ,CAAEA,CALU,CAAxB,EASAZ,CAAyB,GACzB,MAAOY,CAAAA,CAAQ,CAACf,OAAT,EACV,CAvCD,CAiDAmD,CAAQ,CAACK,SAAT,CAAmBU,aAAnB,CAAmC,SAAStD,CAAT,CAAe,CAE9C,GAAIf,CAAAA,CAAS,CAAG,KAAK0D,gBAAL,CAAwB,GAAxB,CAA8B3C,CAA9C,CAEA,GAAI,EAAEf,CAAS,GAAIP,CAAAA,CAAf,CAAJ,CAAmC,CAC/BZ,CAAY,CAACyF,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,qCAAuCxD,CAAjD,CAAvB,CACH,CAED,MAAOtB,CAAAA,CAAa,CAACO,CAAD,CACvB,CATD,CAqBAsD,CAAQ,CAACK,SAAT,CAAmBa,UAAnB,CAAgC,SAAS9B,CAAT,CAAc5B,CAAd,CAAyB2D,CAAzB,CAAgC,IAExDC,CAAAA,CAAU,CAAG3F,CAAM,CAAC4F,gBAFoC,CAKxDC,CAAK,CAAGlG,CAAC,CAACuB,QAAF,EALgD,CAM5D4E,OAAO,CAAC,CAACH,CAAD,CAAD,CAAe,SAASI,CAAT,CAAiB,CACnC,GAAIC,CAAAA,CAAM,CAAG,GAAID,CAAAA,CAAjB,CACA,GAAI,EAAEC,CAAM,WAAY9F,CAAAA,CAApB,CAAJ,CAAqC,CACjC2F,CAAK,CAAC9B,MAAN,CAAa,gCAAkC/D,CAAM,CAAC4F,gBAAtD,CACH,CAFD,IAEO,CACH/E,CAAU,CAAGmF,CAAb,CACAA,CAAM,CAACC,IAAP,GAAcnD,IAAd,CAAmB+C,CAAK,CAAC1E,OAAzB,EAAkC0C,KAAlC,CAAwC/D,CAAY,CAACyF,SAArD,CACH,CACJ,CARM,CAAP,CAUA,MAAOM,CAAAA,CAAK,CAAC/C,IAAN,CAAW,SAASjC,CAAT,CAAqB,CACnC,MAAO,MAAKgE,WAAL,CAAiBhE,CAAU,CAACqF,eAAX,EAAjB,CACV,CAFiB,CAEhBC,IAFgB,CAEX,IAFW,CAAX,EAEOrD,IAFP,CAEY,SAASN,CAAT,CAAmB,CAClC,MAAO3B,CAAAA,CAAU,CAAC4E,UAAX,CAAsB9B,CAAtB,CAA2B5B,CAA3B,CAAsC2D,CAAtC,CAA6ClD,CAA7C,CACV,CAJM,CAKV,CArBD,CAiCA+B,CAAQ,CAACK,SAAT,CAAmBwB,SAAnB,CAA+B,SAASC,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,IAC9DpB,CAAAA,CAAK,CAAGmB,CAAW,CAAClB,KAAZ,CAAkB,GAAlB,CADsD,CAE9DzB,CAAG,CAAG,EAFwD,CAG9D5B,CAAS,CAAG,EAHkD,CAI9DyE,CAAI,CAAG,EAJuD,CAMlE,GAAmB,CAAf,CAAArB,CAAK,CAAC3D,MAAV,CAAsB,CAClBmC,CAAG,CAAG4C,CAAM,CAACpB,CAAK,CAACE,KAAN,GAAcoB,IAAd,EAAD,CAAuBJ,CAAvB,CACf,CACD,GAAmB,CAAf,CAAAlB,CAAK,CAAC3D,MAAV,CAAsB,CAClBO,CAAS,CAAGwE,CAAM,CAACpB,CAAK,CAACE,KAAN,GAAcoB,IAAd,EAAD,CAAuBJ,CAAvB,CACrB,CACD,GAAmB,CAAf,CAAAlB,CAAK,CAAC3D,MAAV,CAAsB,CAClBgF,CAAI,CAAGD,CAAM,CAACpB,CAAK,CAAC7B,IAAN,CAAW,GAAX,EAAgBmD,IAAhB,EAAD,CAAyBJ,CAAzB,CAChB,CAdiE,GAgB9DvB,CAAAA,CAAY,CAAGjE,CAAU,CAACqF,eAAX,EAhB+C,CAkB9DjF,CAAS,CAAG,KAAK0D,gBAAL,CAAwB,GAAxB,CAA8BG,CAlBoB,CAmB9DtC,CAAQ,CAAG9B,CAAa,CAACO,CAAD,CAnBsC,CAuBlE0C,CAAG,CAAGA,CAAG,CAACf,OAAJ,CAAY,UAAZ,CAAwB,GAAxB,CAAN,CAEA,MAAO/B,CAAAA,CAAU,CAAC4E,UAAX,CAAsB9B,CAAtB,CAA2B5B,CAA3B,CAAsCyE,CAAtC,CAA4ChE,CAA5C,CACV,CA1BD,CAsCA+B,CAAQ,CAACK,SAAT,CAAmB8B,QAAnB,CAA8B,SAASL,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,CACjE,KAAK9B,UAAL,CAAgBpC,IAAhB,CAAqBkE,CAAM,CAACD,CAAD,CAAcD,CAAd,CAA3B,EACA,MAAO,EACV,CAHD,CAgBA9B,CAAQ,CAACK,SAAT,CAAmB+B,YAAnB,CAAkC,SAASN,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,IACjEpB,CAAAA,CAAK,CAAGmB,CAAW,CAAClB,KAAZ,CAAkB,GAAlB,CADyD,CAEjEzB,CAAG,CAAG,EAF2D,CAGjE5B,CAAS,CAAG,EAHqD,CAIjE6E,CAAK,CAAG,EAJyD,CAKrE,GAAmB,CAAf,CAAAzB,CAAK,CAAC3D,MAAV,CAAsB,CAClBmC,CAAG,CAAGwB,CAAK,CAACE,KAAN,GAAcoB,IAAd,EACT,CACD,GAAmB,CAAf,CAAAtB,CAAK,CAAC3D,MAAV,CAAsB,CAClBO,CAAS,CAAGoD,CAAK,CAACE,KAAN,GAAcoB,IAAd,EACf,CACD,GAAmB,CAAf,CAAAtB,CAAK,CAAC3D,MAAV,CAAsB,CAClBoF,CAAK,CAAGzB,CAAK,CAAC7B,IAAN,CAAW,GAAX,EAAgBmD,IAAhB,EACX,CAED,GAAc,EAAV,GAAAG,CAAJ,CAAkB,CAEdA,CAAK,CAAGL,CAAM,CAACK,CAAD,CAAQP,CAAR,CACjB,CAED,GAA4B,CAAvB,GAAAO,CAAK,CAACC,OAAN,CAAc,GAAd,CAAD,EAAuD,CAAxB,GAAAD,CAAK,CAACC,OAAN,CAAc,IAAd,CAAnC,CAA+D,CAC3DD,CAAK,CAAGE,IAAI,CAACC,KAAL,CAAWH,CAAX,CACX,CAED,GAAI/D,CAAAA,CAAK,CAAG,KAAK2B,eAAL,CAAqBhD,MAAjC,CACA,KAAKgD,eAAL,CAAqBnC,IAArB,CAA0B,CAACsB,GAAG,CAAEA,CAAN,CAAW5B,SAAS,CAAEA,CAAtB,CAAiC6E,KAAK,CAAEA,CAAxC,CAA1B,EAGA,MAAO,OAAS/D,CAAT,CAAiB,IAC3B,CA7BD,CAyCA0B,CAAQ,CAACK,SAAT,CAAmBoC,WAAnB,CAAiC,SAASX,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,CACpE,GAAIU,CAAAA,CAAO,CAAGV,CAAM,CAACD,CAAW,CAACG,IAAZ,EAAD,CAAqBJ,CAArB,CAApB,CAIAY,CAAO,CAAGA,CAAO,CACZrE,OADK,CACG,IADH,CACQ,MADR,EAELA,OAFK,CAEG,gBAFH,CAEqB,0BAFrB,EAGLA,OAHK,CAGG,eAHH,CAGoB,QAHpB,CAAV,CAKA,MAAO,KAAMqE,CAAN,CAAgB,IAC1B,CAXD,CAuBA1C,CAAQ,CAACK,SAAT,CAAmBsC,iBAAnB,CAAuC,SAASb,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,IAGtEY,CAAAA,CAAK,CAAG,YAH8D,CAItEhC,CAAK,CAAGmB,CAAW,CAACc,KAAZ,CAAkBD,CAAlB,CAJ8D,CAMtE3F,CAAM,CAAG2D,CAAK,CAAC,CAAD,CAAL,CAASsB,IAAT,EAN6D,CAQtED,CAAI,CAAGrB,CAAK,CAAC,CAAD,CAAL,CAASsB,IAAT,EAR+D,CAStEQ,CAAO,CAAGV,CAAM,CAACC,CAAD,CAAOH,CAAP,CATsD,CAU1E,MAAO/F,CAAAA,CAAQ,CAAC+G,QAAT,CAAkBJ,CAAlB,CAA2B,CAC9BzF,MAAM,CAAEA,CADsB,CAE9B8F,KAAK,GAFyB,CAG9BC,QAAQ,CAAE,KAHoB,CAA3B,CAKV,CAfD,CA2BAhD,CAAQ,CAACK,SAAT,CAAmB4C,cAAnB,CAAoC,SAASnB,CAAT,CAAkBC,CAAlB,CAA+BC,CAA/B,CAAuC,IAEnEY,CAAAA,CAAK,CAAG,YAF2D,CAGnEhC,CAAK,CAAGmB,CAAW,CAACc,KAAZ,CAAkBD,CAAlB,CAH2D,CAInEM,CAAS,CAAGlB,CAAM,CAACpB,CAAK,CAAC,CAAD,CAAL,CAASsB,IAAT,EAAD,CAAkBJ,CAAlB,CAJiD,CAKnEqB,CAAM,CAAGnB,CAAM,CAACpB,CAAK,CAAC,CAAD,CAAL,CAASsB,IAAT,EAAD,CAAkBJ,CAAlB,CALoD,CAMnExD,CAAK,CAAG,KAAK6B,aAAL,CAAmBlD,MANwC,CAQvE,KAAKkD,aAAL,CAAmBrC,IAAnB,CAAwB,CACpBoF,SAAS,CAAEA,CADS,CAEpBC,MAAM,CAAEA,CAFY,CAAxB,EAKA,MAAO,QAAU7E,CAAV,CAAkB,IAC5B,CAdD,CAyBA0B,CAAQ,CAACK,SAAT,CAAmB+C,UAAnB,CAAgC,SAAStB,CAAT,CAAkBuB,CAAlB,CAA6B,CACzD,KAAKjD,gBAAL,CAAwBiD,CAAxB,CACA,KAAKpD,eAAL,CAAuB,EAAvB,CACA,KAAKC,UAAL,CAAkB,EAAlB,CACA4B,CAAO,CAACwB,MAAR,CAAkBpH,CAAa,EAA/B,CACA4F,CAAO,CAACxG,GAAR,CAAc,UAAW,CACvB,MAAO,MAAK8G,YAAL,CAAkBR,IAAlB,CAAuB,IAAvB,CAA6BE,CAA7B,CACR,CAFa,CAEZF,IAFY,CAEP,IAFO,CAAd,CAGAE,CAAO,CAACyB,GAAR,CAAc,UAAW,CACvB,MAAO,MAAK1B,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAA0BE,CAA1B,CACR,CAFa,CAEZF,IAFY,CAEP,IAFO,CAAd,CAGAE,CAAO,CAAC0B,EAAR,CAAa,UAAW,CACtB,MAAO,MAAKrB,QAAL,CAAcP,IAAd,CAAmB,IAAnB,CAAyBE,CAAzB,CACR,CAFY,CAEXF,IAFW,CAEN,IAFM,CAAb,CAGAE,CAAO,CAAC2B,KAAR,CAAgB,UAAW,CACzB,MAAO,MAAKhB,WAAL,CAAiBb,IAAjB,CAAsB,IAAtB,CAA4BE,CAA5B,CACR,CAFe,CAEdF,IAFc,CAET,IAFS,CAAhB,CAGAE,CAAO,CAAC4B,WAAR,CAAsB,UAAW,CAC/B,MAAO,MAAKf,iBAAL,CAAuBf,IAAvB,CAA4B,IAA5B,CAAkCE,CAAlC,CACR,CAFqB,CAEpBF,IAFoB,CAEf,IAFe,CAAtB,CAGAE,CAAO,CAAC6B,QAAR,CAAmB,UAAW,CAC5B,MAAO,MAAKV,cAAL,CAAoBrB,IAApB,CAAyB,IAAzB,CAA+BE,CAA/B,CACR,CAFkB,CAEjBF,IAFiB,CAEZ,IAFY,CAAnB,CAGAE,CAAO,CAAC8B,OAAR,CAAkB,CAACnI,MAAM,CAAEA,CAAT,CAAlB,CACAqG,CAAO,CAACtB,YAAR,CAAuB6C,CAC1B,CAzBD,CAkCArD,CAAQ,CAACK,SAAT,CAAmBwD,KAAnB,CAA2B,UAAW,CAClC,GAAIL,CAAAA,CAAE,CAAG,EAAT,CACA,GAA6B,CAAzB,MAAKtD,UAAL,CAAgBjD,MAApB,CAAgC,CAC5BuG,CAAE,CAAG,KAAKtD,UAAL,CAAgBnB,IAAhB,CAAqB,KAArB,CACR,CAED,MAAOyE,CAAAA,CACV,CAPD,CA0BAxD,CAAQ,CAACK,SAAT,CAAmByD,qBAAnB,CAA2C,SAASpB,CAAT,CAAkBxD,CAAlB,CAA2B,CAClE,GAAI6E,CAAAA,CAAO,CAAG,eAAd,CACIC,CADJ,CAEI1F,CAFJ,CAGI2F,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CANJ,CAQA,EAAG,CACCJ,CAAO,CAAG,EAAV,CACA1F,CAAK,CAAGoE,CAAO,CAAC2B,MAAR,CAAeN,CAAf,CAAR,CACA,MAAe,CAAC,CAAT,CAAAzF,CAAP,CAAmB,CAGf0F,CAAO,EAAItB,CAAO,CAAC4B,SAAR,CAAkB,CAAlB,CAAqBhG,CAArB,CAAX,CACAoE,CAAO,CAAGA,CAAO,CAAC6B,MAAR,CAAejG,CAAf,CAAV,CACA2F,CAAQ,CAAG,EAAX,CACAC,CAAM,CAAG,CAAT,CAGAC,CAAI,CAAGzB,CAAO,CAAC6B,MAAR,CAAeL,CAAf,CAAuB,CAAvB,CAAP,CACA,EAAG,CACCD,CAAQ,EAAIE,CAAZ,CACAD,CAAM,GACNC,CAAI,CAAGzB,CAAO,CAAC6B,MAAR,CAAeL,CAAf,CAAuB,CAAvB,CACV,CAJD,MAIiB,GAAR,EAAAC,CAJT,EAOAC,CAAQ,CAAGlF,CAAO,CAACsF,QAAQ,CAACP,CAAD,CAAW,EAAX,CAAT,CAAlB,CACA,GAAwB,WAApB,QAAOG,CAAAA,CAAX,CAAqC,CACjCtI,CAAG,CAAC2I,KAAJ,CAAU,yCAA2CR,CAA3C,CAAsD,KAAhE,EACAG,CAAQ,CAAG,EACd,CACDJ,CAAO,EAAII,CAAX,CACA1B,CAAO,CAAGA,CAAO,CAAC6B,MAAR,CAAe,EAAIN,CAAQ,CAAChH,MAA5B,CAAV,CAGAqB,CAAK,CAAGoE,CAAO,CAAC2B,MAAR,CAAeN,CAAf,CACX,CAGDrB,CAAO,CAAGsB,CAAO,CAAGtB,CAApB,CAGApE,CAAK,CAAGoE,CAAO,CAAC2B,MAAR,CAAeN,CAAf,CAEX,CAtCD,MAsCiB,CAAC,CAAT,CAAAzF,CAtCT,EAwCA,MAAOoE,CAAAA,CACV,CAlDD,CA8DA1C,CAAQ,CAACK,SAAT,CAAmBqE,mBAAnB,CAAyC,SAAShC,CAAT,CAAkBiC,CAAlB,CAAyB,CAC9DA,CAAK,CAAC/F,OAAN,CAAc,SAASgG,CAAT,CAAetG,CAAf,CAAsB,IAE5BuG,CAAAA,CAAE,CAAG,GAAIC,CAAAA,MAAJ,CADC,YAAcxG,CAAd,CAAsB,QACvB,CAAgB,GAAhB,CAFuB,CAGhCoE,CAAO,CAAGA,CAAO,CAACrE,OAAR,CAAgBwG,CAAhB,CAAoBD,CAApB,CACb,CAJD,EAMA,MAAOlC,CAAAA,CACV,CARD,CAoBA1C,CAAQ,CAACK,SAAT,CAAmB0E,QAAnB,CAA8B,SAASrG,CAAT,CAAyBoD,CAAzB,CAAkCuB,CAAlC,CAA6C,CACvE,KAAKjD,gBAAL,CAAwBiD,CAAxB,CADuE,GAEnE2B,CAAAA,CAAY,CAAG1I,CAAU,CAACqF,eAAX,EAFoD,CAInEsD,CAAc,CAAG,GAAIhJ,CAAAA,CAAJ,CAAY,yBAAZ,CAJkD,CAKvE,MAAO,MAAKqE,WAAL,CAAiB0E,CAAjB,EAA+BzG,IAA/B,CAAoC,UAAW,CAClD,KAAK6E,UAAL,CAAgBtB,CAAhB,CAAyBuB,CAAzB,EACA,GAAI6B,CAAAA,CAAM,CAAG/J,CAAQ,CAACgK,MAAT,CAAgBzG,CAAhB,CAAgCoD,CAAhC,CAAyC,KAAKf,aAAL,CAAmBa,IAAnB,CAAwB,IAAxB,CAAzC,CAAb,CACA,MAAOxG,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBsI,CAAM,CAAChD,IAAP,EAArB,CAAoC,KAAK2B,KAAL,EAApC,EAAkDhH,OAAlD,EACV,CAJ0C,CAIzC+E,IAJyC,CAIpC,IAJoC,CAApC,EAKNrD,IALM,CAKD,SAAS6G,CAAT,CAAe5B,CAAf,CAAmB,CACrB,GAAkC,CAA9B,MAAKvD,eAAL,CAAqBhD,MAAzB,CAAqC,CACjC,MAAO3B,CAAAA,CAAG,CAAC+J,WAAJ,CAAgB,KAAKpF,eAArB,EAAsC1B,IAAtC,CAA2C,SAASW,CAAT,CAAkB,CAIhE,KAAKiB,aAAL,CAAqB,KAAKA,aAAL,CAAmB7C,GAAnB,CAAuB,SAASsH,CAAT,CAAe,CACvD,MAAO,CACH1B,SAAS,CAAE,KAAKY,qBAAL,CAA2Bc,CAAI,CAAC1B,SAAhC,CAA2ChE,CAA3C,CADR,CAEHiE,MAAM,CAAE,KAAKW,qBAAL,CAA2Bc,CAAI,CAACzB,MAAhC,CAAwCjE,CAAxC,CAFL,CAIV,CAL2C,CAK1C0C,IAL0C,CAKrC,IALqC,CAAvB,CAArB,CAaAwD,CAAI,CAAG,KAAKtB,qBAAL,CAA2BsB,CAA3B,CAAiClG,CAAjC,CAAP,CACAsE,CAAE,CAAG,KAAKM,qBAAL,CAA2BN,CAA3B,CAA+BtE,CAA/B,CAAL,CACA,MAAO9D,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBwI,CAArB,CAA2B5B,CAA3B,EAA+B3G,OAA/B,EACV,CApBiD,CAoBhD+E,IApBgD,CAoB3C,IApB2C,CAA3C,CAqBV,CAED,MAAOxG,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBwI,CAArB,CAA2B5B,CAA3B,EAA+B3G,OAA/B,EACV,CA1BK,CA0BJ+E,IA1BI,CA0BC,IA1BD,CALC,EAgCNrD,IAhCM,CAgCD,SAAS6G,CAAT,CAAe5B,CAAf,CAAmB,CAGrB,GAAgC,CAA5B,MAAKrD,aAAL,CAAmBlD,MAAvB,CAAmC,CAC/B,MAAOjB,CAAAA,CAAQ,CAACe,GAAT,CAAa,KAAKoD,aAAlB,EAAiC5B,IAAjC,CAAsC,SAASoG,CAAT,CAAgB,CACzDS,CAAI,CAAG,KAAKV,mBAAL,CAAyBU,CAAzB,CAA+BT,CAA/B,CAAP,CACAnB,CAAE,CAAG,KAAKkB,mBAAL,CAAyBlB,CAAzB,CAA6BmB,CAA7B,CAAL,CACA,MAAOvJ,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBwI,CAArB,CAA2B5B,CAA3B,EAA+B3G,OAA/B,EACV,CAJ4C,CAI3C+E,IAJ2C,CAItC,IAJsC,CAAtC,CAKV,CAED,MAAOxG,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBwI,CAArB,CAA2B5B,CAA3B,EAA+B3G,OAA/B,EACV,CAZK,CAYJ+E,IAZI,CAYC,IAZD,CAhCC,EA6CNrD,IA7CM,CA6CD,SAAS6G,CAAT,CAAe5B,CAAf,CAAmB,CACrByB,CAAc,CAACrI,OAAf,GACA,MAAOxB,CAAAA,CAAC,CAACuB,QAAF,GAAaC,OAAb,CAAqBwI,CAArB,CAA2B5B,CAA3B,EAA+B3G,OAA/B,EACV,CAhDM,CAiDV,CAtDD,CA9oBa,GA6sBTyI,CAAAA,CAAa,CAAG,SAASjG,CAAT,CAAiB,CACjC,GAAsB,EAAlB,GAAAA,CAAM,CAAC6C,IAAP,EAAJ,CAA0B,CACtB,GAAIqD,CAAAA,CAAS,CAAGnK,CAAC,CAAC,UAAD,CAAD,CAAcgD,IAAd,CAAmB,MAAnB,CAA2B,iBAA3B,EAA8CgH,IAA9C,CAAmD/F,CAAnD,CAAhB,CACAjE,CAAC,CAAC,MAAD,CAAD,CAAUoK,MAAV,CAAiBD,CAAjB,CACH,CACJ,CAltBY,CA8tBTE,CAAU,CAAG,SAASC,CAAT,CAAkBC,CAAlB,CAA2BC,CAA3B,CAAkCC,CAAlC,CAAqD,CAClE,GAAIC,CAAAA,CAAW,CAAG1K,CAAC,CAACsK,CAAD,CAAnB,CACA,GAAII,CAAW,CAAC7I,MAAhB,CAAwB,IAEhB8I,CAAAA,CAAQ,CAAG3K,CAAC,CAACuK,CAAD,CAFI,CAGhBK,CAAQ,CAAG,IAHK,CAKpB,GAAIH,CAAJ,CAAuB,CAEnBG,CAAQ,CAAG,GAAInK,CAAAA,CAAC,CAACoK,QAAN,CAAeH,CAAW,CAACI,QAAZ,GAAuBnJ,GAAvB,EAAf,CAAX,CACAiJ,CAAQ,CAACG,OAAT,KAGAL,CAAW,CAACM,KAAZ,GACAN,CAAW,CAACN,MAAZ,CAAmBO,CAAnB,CACH,CARD,IAQO,CAEHC,CAAQ,CAAG,GAAInK,CAAAA,CAAC,CAACoK,QAAN,CAAeH,CAAW,CAAC/I,GAAZ,EAAf,CAAX,CACAiJ,CAAQ,CAACG,OAAT,KAGAL,CAAW,CAACO,WAAZ,CAAwBN,CAAxB,CACH,CAEDT,CAAa,CAACM,CAAD,CAAb,CAEAhK,CAAK,CAAC0K,0BAAN,CAAiCP,CAAjC,CACH,CACJ,CA1vBY,CAowBb/F,CAAQ,CAACK,SAAT,CAAmBkG,eAAnB,CAAqC,SAAS7H,CAAT,CAAyB,IACtD8H,CAAAA,CAAM,CAAGrL,CAAQ,CAACqH,KAAT,CAAe9D,CAAf,CAD6C,CAEtD+H,CAAQ,CAAG,EAF2C,CAItDC,CAAW,CAAG,SAASF,CAAT,CAAiBC,CAAjB,CAA2B,CACzC,GAAIE,CAAAA,CAAJ,CAAOC,CAAP,CACA,IAAKD,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGH,CAAM,CAACvJ,MAAvB,CAA+B0J,CAAC,EAAhC,CAAoC,CAChCC,CAAK,CAAGJ,CAAM,CAACG,CAAD,CAAd,CACA,GAAgB,GAAZ,EAAAC,CAAK,CAAC,CAAD,CAAL,EAA+B,GAAZ,EAAAA,CAAK,CAAC,CAAD,CAA5B,CAAwC,CACpCH,CAAQ,CAAC3I,IAAT,CAAc8I,CAAK,CAAC,CAAD,CAAnB,CACH,CACD,GAAmB,CAAf,CAAAA,CAAK,CAAC3J,MAAV,CAAsB,CAClByJ,CAAW,CAACE,CAAK,CAAC,CAAD,CAAN,CAAWH,CAAX,CACd,CACJ,CACJ,CAfyD,CAiB1DC,CAAW,CAACF,CAAD,CAASC,CAAT,CAAX,CAEA,MAAOA,CAAAA,CACV,CApBD,CAiCAzG,CAAQ,CAACK,SAAT,CAAmBwG,aAAnB,CAAmC,SAAStG,CAAT,CAAuBuG,CAAvB,CAAkC,CACjE,GAAIpK,CAAAA,CAAS,CAAG,KAAK0D,gBAAL,CAAwB,GAAxB,CAA8BG,CAA9C,CAEA,GAAI7D,CAAS,GAAIL,CAAAA,CAAjB,CAAuC,CACnC,MAAOA,CAAAA,CAAoB,CAACK,CAAD,CAC9B,CAKDoK,CAAS,CAAGA,CAAS,EAAI,CAACpK,CAAD,CAAzB,CAEAL,CAAoB,CAACK,CAAD,CAApB,CAAkCtB,CAAC,CAACuB,QAAF,EAAlC,CAEA,KAAK2D,WAAL,CAAiBC,CAAjB,EACChC,IADD,CACM,SAASG,CAAT,CAAyB,IACvB+H,CAAAA,CAAQ,CAAG,KAAKF,eAAL,CAAqB7H,CAArB,CADY,CAEvBqI,CAAc,CAAGN,CAAQ,CAAC/F,MAAT,CAAgB,SAASsG,CAAT,CAAsB,CAGvD,GAAoE,CAAhE,EAAAF,CAAS,CAACxE,OAAV,CAAkB,KAAKlC,gBAAL,CAAwB,GAAxB,CAA8B4G,CAAhD,CAAJ,CAAuE,CAEnE,QACH,CAGD,MAAOA,CAAAA,CAAW,EAAIzG,CACzB,CAVoC,CAUnCqB,IAVmC,CAU9B,IAV8B,CAAhB,CAFM,CAevBqF,CAAY,CAAGF,CAAc,CAACzJ,GAAf,CAAmB,SAAS0J,CAAT,CAAsB,CACxDF,CAAS,CAAChJ,IAAV,CAAe,KAAKsC,gBAAL,CAAwB,GAAxB,CAA8B4G,CAA7C,EACA,MAAO,MAAKH,aAAL,CAAmBG,CAAnB,CAAgCF,CAAhC,CACV,CAHqC,CAGpClF,IAHoC,CAG/B,IAH+B,CAAnB,CAfQ,CAqB3B,MAAOxG,CAAAA,CAAC,CAACyE,IAAF,CAAOC,KAAP,CAAa1E,CAAb,CAAgB6L,CAAhB,EACN1I,IADM,CACD,UAAW,CACb,MAAOlC,CAAAA,CAAoB,CAACK,CAAD,CAApB,CAAgCE,OAAhC,CAAwC8B,CAAxC,CACV,CAHM,CAIV,CAzBK,CAyBJkD,IAzBI,CAyBC,IAzBD,CADN,EA2BCtC,KA3BD,CA2BOjD,CAAoB,CAACK,CAAD,CAApB,CAAgC8C,MA3BvC,EA6BA,MAAOnD,CAAAA,CAAoB,CAACK,CAAD,CAC9B,CA5CD,CA0DAsD,CAAQ,CAACK,SAAT,CAAmB8E,MAAnB,CAA4B,SAAS5E,CAAT,CAAuBuB,CAAvB,CAAgCuB,CAAhC,CAA2C,CACnE,GAA2B,WAAvB,QAAQA,CAAAA,CAAZ,CAAwC,CAEpCA,CAAS,CAAG5H,CAAM,CAACiC,KACtB,CAED,KAAK0C,gBAAL,CAAwBiD,CAAxB,CANmE,GAS/DjC,CAAAA,CAAU,CAAG3F,CAAM,CAAC4F,gBAT2C,CAW/DC,CAAK,CAAGlG,CAAC,CAACuB,QAAF,EAXuD,CAYnE4E,OAAO,CAAC,CAACH,CAAD,CAAD,CAAe,SAASI,CAAT,CAAiB,CACnC,GAAIC,CAAAA,CAAM,CAAG,GAAID,CAAAA,CAAjB,CACA,GAAI,EAAEC,CAAM,WAAY9F,CAAAA,CAApB,CAAJ,CAAqC,CACjC2F,CAAK,CAAC9B,MAAN,CAAa,gCAAkC/D,CAAM,CAACyL,UAAtD,CACH,CAFD,IAEO,CACH5K,CAAU,CAAGmF,CAAb,CACAA,CAAM,CAACC,IAAP,GAAcnD,IAAd,CAAmB+C,CAAK,CAAC1E,OAAzB,EAAkC0C,KAAlC,CAAwC/D,CAAY,CAACyF,SAArD,CACH,CACJ,CARM,CAAP,CAUA,MAAOM,CAAAA,CAAK,CAAC/C,IAAN,CAAW,UAAW,CACrB,MAAO,MAAKsI,aAAL,CAAmBtG,CAAnB,CACV,CAFa,CAEZqB,IAFY,CAEP,IAFO,CAAX,EAEWrD,IAFX,CAEgB,SAASG,CAAT,CAAyB,CACxC,MAAO,MAAKqG,QAAL,CAAcrG,CAAd,CAA8BoD,CAA9B,CAAuCuB,CAAvC,CACV,CAFkB,CAEjBzB,IAFiB,CAEZ,IAFY,CAFhB,CAKV,CA3BD,CA/1Ba,GAq4BTuF,CAAAA,CAAU,CAAG,SAASzB,CAAT,CAAkBN,CAAlB,CAAwB5B,CAAxB,CAA4B,CACzC,GAAI4D,CAAAA,CAAI,CAAGhM,CAAC,CAACsK,CAAD,CAAZ,CACA,GAAI0B,CAAI,CAACnK,MAAT,CAAiB,CAEbmK,CAAI,CAACC,OAAL,CAAajC,CAAb,EAEAE,CAAa,CAAC9B,CAAD,CAAb,CAEA5H,CAAK,CAAC0K,0BAAN,CAAiCc,CAAjC,CACH,CACJ,CA/4BY,CA05BTE,CAAS,CAAG,SAAS5B,CAAT,CAAkBN,CAAlB,CAAwB5B,CAAxB,CAA4B,CACxC,GAAI4D,CAAAA,CAAI,CAAGhM,CAAC,CAACsK,CAAD,CAAZ,CACA,GAAI0B,CAAI,CAACnK,MAAT,CAAiB,CAEbmK,CAAI,CAAC5B,MAAL,CAAYJ,CAAZ,EAEAE,CAAa,CAAC9B,CAAD,CAAb,CAEA5H,CAAK,CAAC0K,0BAAN,CAAiCc,CAAjC,CACH,CACJ,CAp6BY,CAs6Bb,MAA2C,CAevCjC,MAAM,CAAE,gBAAS5E,CAAT,CAAuBuB,CAAvB,CAAgCuB,CAAhC,CAA2C,CAC/C,GAAIkE,CAAAA,CAAQ,CAAG,GAAIvH,CAAAA,CAAnB,CACA,MAAOuH,CAAAA,CAAQ,CAACpC,MAAT,CAAgB5E,CAAhB,CAA8BuB,CAA9B,CAAuCuB,CAAvC,CACV,CAlBsC,CA+BvCmE,SAAS,CAAE,mBAASpI,CAAT,CAAc5B,CAAd,CAAyB2D,CAAzB,CAAgC,CACvC,GAAIoG,CAAAA,CAAQ,CAAG,GAAIvH,CAAAA,CAAnB,CACA,MAAOuH,CAAAA,CAAQ,CAACrG,UAAT,CAAoB9B,CAApB,CAAyB5B,CAAzB,CAAoC2D,CAApC,CACV,CAlCsC,CA2CvCmE,aAAa,CAAEA,CA3CwB,CAqDvCmC,mBAAmB,CAAE,6BAAS/B,CAAT,CAAkBC,CAAlB,CAA2BC,CAA3B,CAAkC,CACnDH,CAAU,CAACC,CAAD,CAAUC,CAAV,CAAmBC,CAAnB,IACb,CAvDsC,CAiEvCE,WAAW,CAAE,qBAASJ,CAAT,CAAkBC,CAAlB,CAA2BC,CAA3B,CAAkC,CAC3CH,CAAU,CAACC,CAAD,CAAUC,CAAV,CAAmBC,CAAnB,IACb,CAnEsC,CA6EvC8B,mBAAmB,CAAE,6BAAShC,CAAT,CAAkBN,CAAlB,CAAwB5B,CAAxB,CAA4B,CAC7C2D,CAAU,CAACzB,CAAD,CAAUN,CAAV,CAAgB5B,CAAhB,CACb,CA/EsC,CAyFvCmE,kBAAkB,CAAE,4BAASjC,CAAT,CAAkBN,CAAlB,CAAwB5B,CAAxB,CAA4B,CAC5C8D,CAAS,CAAC5B,CAAD,CAAUN,CAAV,CAAgB5B,CAAhB,CACZ,CA3FsC,CA6F9C,CArhCK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Template renderer for Moodle. Load and render Moodle templates with Mustache.\n *\n * @module     core/templates\n * @package    core\n * @class      templates\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      2.9\n */\ndefine([\n        'core/mustache',\n        'jquery',\n        'core/ajax',\n        'core/str',\n        'core/notification',\n        'core/url',\n        'core/config',\n        'core/localstorage',\n        'core/icon_system',\n        'core/event',\n        'core/yui',\n        'core/log',\n        'core/truncate',\n        'core/user_date',\n        'core/pending',\n    ],\n    function(mustache, $, ajax, str, notification, coreurl, config, storage, IconSystem, event, Y, Log, Truncate, UserDate,\n        Pending) {\n\n    // Module variables.\n    /** @var {Number} uniqInstances Count of times this constructor has been called. */\n    var uniqInstances = 0;\n\n    /** @var {String[]} templateCache - Cache of already loaded template strings */\n    var templateCache = {};\n\n    /** @var {Promise[]} templatePromises - Cache of already loaded template promises */\n    var templatePromises = {};\n\n    /** @var {Promise[]} cachePartialPromises - Cache of already loaded template partial promises */\n    var cachePartialPromises = {};\n\n    /** @var {Object} iconSystem - Object extending core/iconsystem */\n    var iconSystem = {};\n\n    /** @var {Object[]} loadTemplateBuffer - List of templates to be loaded */\n    var loadTemplateBuffer = [];\n\n    /** @var {Bool} isLoadingTemplates - Whether templates are currently being loaded */\n    var isLoadingTemplates = false;\n\n    /**\n     * Search the various caches for a template promise for the given search key.\n     * The search key should be in the format <theme>/<component>/<template> e.g. boost/core/modal.\n     *\n     * If the template is found in any of the caches it will populate the other caches with\n     * the same data as well.\n     *\n     * @param {String} searchKey The template search key in the format <theme>/<component>/<template> e.g. boost/core/modal\n     * @return {Object} jQuery promise resolved with the template source\n     */\n    var getTemplatePromiseFromCache = function(searchKey) {\n        // First try the cache of promises.\n        if (searchKey in templatePromises) {\n            return templatePromises[searchKey];\n        }\n\n        // Check the module cache.\n        if (searchKey in templateCache) {\n            // Add this to the promises cache for future.\n            templatePromises[searchKey] = $.Deferred().resolve(templateCache[searchKey]).promise();\n            return templatePromises[searchKey];\n        }\n\n        // Now try local storage.\n        var cached = storage.get('core_template/' + searchKey);\n        if (cached) {\n            // Add this to the module cache for future.\n            templateCache[searchKey] = cached;\n            // Add this to the promises cache for future.\n            templatePromises[searchKey] = $.Deferred().resolve(cached).promise();\n            return templatePromises[searchKey];\n        }\n\n        return null;\n    };\n\n    /**\n     * Take all of the templates waiting in the buffer and load them from the server\n     * or from the cache.\n     *\n     * All of the templates that need to be loaded from the server will be batched up\n     * and sent in a single network request.\n     */\n    var processLoadTemplateBuffer = function() {\n        if (!loadTemplateBuffer.length) {\n            return;\n        }\n\n        if (isLoadingTemplates) {\n            return;\n        }\n\n        isLoadingTemplates = true;\n        // Grab any templates waiting in the buffer.\n        var templatesToLoad = loadTemplateBuffer.slice();\n        // This will be resolved with the list of promises for the server request.\n        var serverRequestsDeferred = $.Deferred();\n        var requests = [];\n        // Get a list of promises for each of the templates we need to load.\n        var templatePromises = templatesToLoad.map(function(templateData) {\n            var component = templateData.component;\n            var name = templateData.name;\n            var searchKey = templateData.searchKey;\n            var theme = templateData.theme;\n            var templateDeferred = templateData.deferred;\n            var promise = null;\n\n            // Double check to see if this template happened to have landed in the\n            // cache as a dependency of an earlier template.\n            var cachedPromise = getTemplatePromiseFromCache(searchKey);\n            if (cachedPromise) {\n                // We've seen this template so immediately resolve the existing promise.\n                promise = cachedPromise;\n            } else {\n                // We haven't seen this template yet so we need to request it from\n                // the server.\n                requests.push({\n                    methodname: 'core_output_load_template_with_dependencies',\n                    args: {\n                        component: component,\n                        template: name,\n                        themename: theme,\n                        lang: $('html').attr('lang').replace(/-/g, '_')\n                    }\n                });\n                // Remember the index in the requests list for this template so that\n                // we can get the appropriate promise back.\n                var index = requests.length - 1;\n\n                // The server deferred will be resolved with a list of all of the promises\n                // that were sent in the order that they were added to the requests array.\n                promise = serverRequestsDeferred.promise()\n                    .then(function(promises) {\n                        // The promise for this template will be the one that matches the index\n                        // for it's entry in the requests array.\n                        //\n                        // Make sure the promise is added to the promises cache for this template\n                        // search key so that we don't request it again.\n                        templatePromises[searchKey] = promises[index].then(function(response) {\n                            var templateSource = null;\n\n                            // Process all of the template dependencies for this template and add\n                            // them to the caches so that we don't request them again later.\n                            response.templates.forEach(function(data) {\n                                // Generate the search key for this template in the response so that we\n                                // can add it to the caches.\n                                var tempSearchKey = [theme, data.component, data.name].join('/');\n                                // Cache all of the dependent templates because we'll need them to render\n                                // the requested template.\n                                templateCache[tempSearchKey] = data.value;\n                                storage.set('core_template/' + tempSearchKey, data.value);\n\n                                if (data.component == component && data.name == name) {\n                                    // This is the original template that was requested so remember it to return.\n                                    templateSource = data.value;\n                                }\n                            });\n\n                            if (response.strings.length) {\n                                // If we have strings that the template needs then warm the string cache\n                                // with them now so that we don't need to re-fetch them.\n                                str.cache_strings(response.strings.map(function(data) {\n                                    return {\n                                        component: data.component,\n                                        key: data.name,\n                                        value: data.value\n                                    };\n                                }));\n                            }\n\n                            // Return the original template source that the user requested.\n                            return templateSource;\n                        });\n\n                        return templatePromises[searchKey];\n                    });\n            }\n\n            return promise\n                .then(function(source) {\n                    // When we've successfully loaded the template then resolve the deferred\n                    // in the buffer so that all of the calling code can proceed.\n                    return templateDeferred.resolve(source);\n                })\n                .catch(function(error) {\n                    // If there was an error loading the template then reject the deferred\n                    // in the buffer so that all of the calling code can proceed.\n                    templateDeferred.reject(error);\n                    // Rethrow for anyone else listening.\n                    throw error;\n                });\n        });\n\n        if (requests.length) {\n            // We have requests to send so resolve the deferred with the promises.\n            serverRequestsDeferred.resolve(ajax.call(requests, true, false, false, 0, M.cfg.themerev));\n        } else {\n            // Nothing to load so we can resolve our deferred.\n            serverRequestsDeferred.resolve();\n        }\n\n        // Once we've finished loading all of the templates then recurse to process\n        // any templates that may have been added to the buffer in the time that we\n        // were fetching.\n        $.when.apply(null, templatePromises)\n            .then(function() {\n                // Remove the templates we've loaded from the buffer.\n                loadTemplateBuffer.splice(0, templatesToLoad.length);\n                isLoadingTemplates = false;\n                processLoadTemplateBuffer();\n                return;\n            })\n            .catch(function() {\n                // Remove the templates we've loaded from the buffer.\n                loadTemplateBuffer.splice(0, templatesToLoad.length);\n                isLoadingTemplates = false;\n                processLoadTemplateBuffer();\n            });\n    };\n\n    /**\n     * Constructor\n     *\n     * Each call to templates.render gets it's own instance of this class.\n     */\n    var Renderer = function() {\n        this.requiredStrings = [];\n        this.requiredJS = [];\n        this.requiredDates = [];\n        this.currentThemeName = '';\n    };\n    // Class variables and functions.\n\n    /** @var {string[]} requiredStrings - Collection of strings found during the rendering of one template */\n    Renderer.prototype.requiredStrings = null;\n\n    /** @var {object[]} requiredDates - Collection of dates found during the rendering of one template */\n    Renderer.prototype.requiredDates = [];\n\n    /** @var {string[]} requiredJS - Collection of js blocks found during the rendering of one template */\n    Renderer.prototype.requiredJS = null;\n\n    /** @var {String} themeName for the current render */\n    Renderer.prototype.currentThemeName = '';\n\n    /**\n     * Load a template.\n     *\n     * @method getTemplate\n     * @private\n     * @param {string} templateName - should consist of the component and the name of the template like this:\n     *                              core/menu (lib/templates/menu.mustache) or\n     *                              tool_bananas/yellow (admin/tool/bananas/templates/yellow.mustache)\n     * @return {Promise} JQuery promise object resolved when the template has been fetched.\n     */\n    Renderer.prototype.getTemplate = function(templateName) {\n        var currentTheme = this.currentThemeName;\n        var searchKey = currentTheme + '/' + templateName;\n\n        // If we haven't already seen this template then buffer it.\n        var cachedPromise = getTemplatePromiseFromCache(searchKey);\n        if (cachedPromise) {\n            return cachedPromise;\n        }\n\n        // Check the buffer to seee if this template has already been added.\n        var existingBufferRecords = loadTemplateBuffer.filter(function(record) {\n            return record.searchKey == searchKey;\n        });\n        if (existingBufferRecords.length) {\n            // This template is already in the buffer so just return the existing\n            // promise. No need to add it to the buffer again.\n            return existingBufferRecords[0].deferred.promise();\n        }\n\n        // This is the first time this has been requested so let's add it to the buffer\n        // to be loaded.\n        var parts = templateName.split('/');\n        var component = parts.shift();\n        var name = parts.join('/');\n        var deferred = $.Deferred();\n\n        // Add this template to the buffer to be loaded.\n        loadTemplateBuffer.push({\n            component: component,\n            name: name,\n            theme: currentTheme,\n            searchKey: searchKey,\n            deferred: deferred\n        });\n\n        // We know there is at least one thing in the buffer so kick off a processing run.\n        processLoadTemplateBuffer();\n        return deferred.promise();\n    };\n\n    /**\n     * Load a partial from the cache or ajax.\n     *\n     * @method partialHelper\n     * @private\n     * @param {string} name The partial name to load.\n     * @return {string}\n     */\n    Renderer.prototype.partialHelper = function(name) {\n\n        var searchKey = this.currentThemeName + '/' + name;\n\n        if (!(searchKey in templateCache)) {\n            notification.exception(new Error('Failed to pre-fetch the template: ' + name));\n        }\n\n        return templateCache[searchKey];\n    };\n\n    /**\n     * Render a single image icon.\n     *\n     * @method renderIcon\n     * @private\n     * @param {string} key The icon key.\n     * @param {string} component The component name.\n     * @param {string} title The icon title\n     * @return {Promise}\n     */\n    Renderer.prototype.renderIcon = function(key, component, title) {\n        // Preload the module to do the icon rendering based on the theme iconsystem.\n        var modulename = config.iconsystemmodule;\n\n        // RequireJS does not return a promise.\n        var ready = $.Deferred();\n        require([modulename], function(System) {\n            var system = new System();\n            if (!(system instanceof IconSystem)) {\n                ready.reject('Invalid icon system specified' + config.iconsystemmodule);\n            } else {\n                iconSystem = system;\n                system.init().then(ready.resolve).catch(notification.exception);\n            }\n        });\n\n        return ready.then(function(iconSystem) {\n            return this.getTemplate(iconSystem.getTemplateName());\n        }.bind(this)).then(function(template) {\n            return iconSystem.renderIcon(key, component, title, template);\n        });\n    };\n\n    /**\n     * Render image icons.\n     *\n     * @method pixHelper\n     * @private\n     * @param {object} context The mustache context\n     * @param {string} sectionText The text to parse arguments from.\n     * @param {function} helper Used to render the alt attribute of the text.\n     * @return {string}\n     */\n    Renderer.prototype.pixHelper = function(context, sectionText, helper) {\n        var parts = sectionText.split(',');\n        var key = '';\n        var component = '';\n        var text = '';\n\n        if (parts.length > 0) {\n            key = helper(parts.shift().trim(), context);\n        }\n        if (parts.length > 0) {\n            component = helper(parts.shift().trim(), context);\n        }\n        if (parts.length > 0) {\n            text = helper(parts.join(',').trim(), context);\n        }\n\n        var templateName = iconSystem.getTemplateName();\n\n        var searchKey = this.currentThemeName + '/' + templateName;\n        var template = templateCache[searchKey];\n\n        // The key might have been escaped by the JS Mustache engine which\n        // converts forward slashes to HTML entities. Let us undo that here.\n        key = key.replace(/&#x2F;/gi, '/');\n\n        return iconSystem.renderIcon(key, component, text, template);\n    };\n\n    /**\n     * Render blocks of javascript and save them in an array.\n     *\n     * @method jsHelper\n     * @private\n     * @param {object} context The current mustache context.\n     * @param {string} sectionText The text to save as a js block.\n     * @param {function} helper Used to render the block.\n     * @return {string}\n     */\n    Renderer.prototype.jsHelper = function(context, sectionText, helper) {\n        this.requiredJS.push(helper(sectionText, context));\n        return '';\n    };\n\n    /**\n     * String helper used to render {{#str}}abd component { a : 'fish'}{{/str}}\n     * into a get_string call.\n     *\n     * @method stringHelper\n     * @private\n     * @param {object} context The current mustache context.\n     * @param {string} sectionText The text to parse the arguments from.\n     * @param {function} helper Used to render subsections of the text.\n     * @return {string}\n     */\n    Renderer.prototype.stringHelper = function(context, sectionText, helper) {\n        var parts = sectionText.split(',');\n        var key = '';\n        var component = '';\n        var param = '';\n        if (parts.length > 0) {\n            key = parts.shift().trim();\n        }\n        if (parts.length > 0) {\n            component = parts.shift().trim();\n        }\n        if (parts.length > 0) {\n            param = parts.join(',').trim();\n        }\n\n        if (param !== '') {\n            // Allow variable expansion in the param part only.\n            param = helper(param, context);\n        }\n        // Allow json formatted $a arguments.\n        if ((param.indexOf('{') === 0) && (param.indexOf('{{') !== 0)) {\n            param = JSON.parse(param);\n        }\n\n        var index = this.requiredStrings.length;\n        this.requiredStrings.push({key: key, component: component, param: param});\n\n        // The placeholder must not use {{}} as those can be misinterpreted by the engine.\n        return '[[_s' + index + ']]';\n    };\n\n    /**\n     * Quote helper used to wrap content in quotes, and escape all quotes present in the content.\n     *\n     * @method quoteHelper\n     * @private\n     * @param {object} context The current mustache context.\n     * @param {string} sectionText The text to parse the arguments from.\n     * @param {function} helper Used to render subsections of the text.\n     * @return {string}\n     */\n    Renderer.prototype.quoteHelper = function(context, sectionText, helper) {\n        var content = helper(sectionText.trim(), context);\n\n        // Escape the {{ and the \".\n        // This involves wrapping {{, and }} in change delimeter tags.\n        content = content\n            .replace('\"', '\\\\\"')\n            .replace(/([\\{\\}]{2,3})/g, '{{=<% %>=}}$1<%={{ }}=%>')\n            .replace(/(\\r\\n|\\r|\\n)/g, '&#x0a;')\n            ;\n        return '\"' + content + '\"';\n    };\n\n    /**\n     * Shorten text helper to truncate text and append a trailing ellipsis.\n     *\n     * @method shortenTextHelper\n     * @private\n     * @param {object} context The current mustache context.\n     * @param {string} sectionText The text to parse the arguments from.\n     * @param {function} helper Used to render subsections of the text.\n     * @return {string}\n     */\n    Renderer.prototype.shortenTextHelper = function(context, sectionText, helper) {\n        // Non-greedy split on comma to grab section text into the length and\n        // text parts.\n        var regex = /(.*?),(.*)/;\n        var parts = sectionText.match(regex);\n        // The length is the part matched in the first set of parethesis.\n        var length = parts[1].trim();\n        // The length is the part matched in the second set of parethesis.\n        var text = parts[2].trim();\n        var content = helper(text, context);\n        return Truncate.truncate(content, {\n            length: length,\n            words: true,\n            ellipsis: '...'\n        });\n    };\n\n    /**\n     * User date helper to render user dates from timestamps.\n     *\n     * @method userDateHelper\n     * @private\n     * @param {object} context The current mustache context.\n     * @param {string} sectionText The text to parse the arguments from.\n     * @param {function} helper Used to render subsections of the text.\n     * @return {string}\n     */\n    Renderer.prototype.userDateHelper = function(context, sectionText, helper) {\n        // Non-greedy split on comma to grab the timestamp and format.\n        var regex = /(.*?),(.*)/;\n        var parts = sectionText.match(regex);\n        var timestamp = helper(parts[1].trim(), context);\n        var format = helper(parts[2].trim(), context);\n        var index = this.requiredDates.length;\n\n        this.requiredDates.push({\n            timestamp: timestamp,\n            format: format\n        });\n\n        return '[[_t_' + index + ']]';\n    };\n\n    /**\n     * Add some common helper functions to all context objects passed to templates.\n     * These helpers match exactly the helpers available in php.\n     *\n     * @method addHelpers\n     * @private\n     * @param {Object} context Simple types used as the context for the template.\n     * @param {String} themeName We set this multiple times, because there are async calls.\n     */\n    Renderer.prototype.addHelpers = function(context, themeName) {\n        this.currentThemeName = themeName;\n        this.requiredStrings = [];\n        this.requiredJS = [];\n        context.uniqid = (uniqInstances++);\n        context.str = function() {\n          return this.stringHelper.bind(this, context);\n        }.bind(this);\n        context.pix = function() {\n          return this.pixHelper.bind(this, context);\n        }.bind(this);\n        context.js = function() {\n          return this.jsHelper.bind(this, context);\n        }.bind(this);\n        context.quote = function() {\n          return this.quoteHelper.bind(this, context);\n        }.bind(this);\n        context.shortentext = function() {\n          return this.shortenTextHelper.bind(this, context);\n        }.bind(this);\n        context.userdate = function() {\n          return this.userDateHelper.bind(this, context);\n        }.bind(this);\n        context.globals = {config: config};\n        context.currentTheme = themeName;\n    };\n\n    /**\n     * Get all the JS blocks from the last rendered template.\n     *\n     * @method getJS\n     * @private\n     * @return {string}\n     */\n    Renderer.prototype.getJS = function() {\n        var js = '';\n        if (this.requiredJS.length > 0) {\n            js = this.requiredJS.join(\";\\n\");\n        }\n\n        return js;\n    };\n\n    /**\n     * Treat strings in content.\n     *\n     * The purpose of this method is to replace the placeholders found in a string\n     * with the their respective translated strings.\n     *\n     * Previously we were relying on String.replace() but the complexity increased with\n     * the numbers of strings to replace. Now we manually walk the string and stop at each\n     * placeholder we find, only then we replace it. Most of the time we will\n     * replace all the placeholders in a single run, at times we will need a few\n     * more runs when placeholders are replaced with strings that contain placeholders\n     * themselves.\n     *\n     * @param {String} content The content in which string placeholders are to be found.\n     * @param {Array} strings The strings to replace with.\n     * @return {String} The treated content.\n     */\n    Renderer.prototype.treatStringsInContent = function(content, strings) {\n        var pattern = /\\[\\[_s\\d+\\]\\]/,\n            treated,\n            index,\n            strIndex,\n            walker,\n            char,\n            strFinal;\n\n        do {\n            treated = '';\n            index = content.search(pattern);\n            while (index > -1) {\n\n                // Copy the part prior to the placeholder to the treated string.\n                treated += content.substring(0, index);\n                content = content.substr(index);\n                strIndex = '';\n                walker = 4; // 4 is the length of '[[_s'.\n\n                // Walk the characters to manually extract the index of the string from the placeholder.\n                char = content.substr(walker, 1);\n                do {\n                    strIndex += char;\n                    walker++;\n                    char = content.substr(walker, 1);\n                } while (char != ']');\n\n                // Get the string, add it to the treated result, and remove the placeholder from the content to treat.\n                strFinal = strings[parseInt(strIndex, 10)];\n                if (typeof strFinal === 'undefined') {\n                    Log.debug('Could not find string for pattern [[_s' + strIndex + ']].');\n                    strFinal = '';\n                }\n                treated += strFinal;\n                content = content.substr(6 + strIndex.length); // 6 is the length of the placeholder without the index: '[[_s]]'.\n\n                // Find the next placeholder.\n                index = content.search(pattern);\n            }\n\n            // The content becomes the treated part with the rest of the content.\n            content = treated + content;\n\n            // Check if we need to walk the content again, in case strings contained placeholders.\n            index = content.search(pattern);\n\n        } while (index > -1);\n\n        return content;\n    };\n\n    /**\n     * Treat strings in content.\n     *\n     * The purpose of this method is to replace the date placeholders found in the\n     * content with the their respective translated dates.\n     *\n     * @param {String} content The content in which string placeholders are to be found.\n     * @param {Array} strings The strings to replace with.\n     * @return {String} The treated content.\n     */\n    Renderer.prototype.treatDatesInContent = function(content, dates) {\n        dates.forEach(function(date, index) {\n            var key = '\\\\[\\\\[_t_' + index + '\\\\]\\\\]';\n            var re = new RegExp(key, 'g');\n            content = content.replace(re, date);\n        });\n\n        return content;\n    };\n\n    /**\n     * Render a template and then call the callback with the result.\n     *\n     * @method doRender\n     * @private\n     * @param {string} templateSource The mustache template to render.\n     * @param {Object} context Simple types used as the context for the template.\n     * @param {String} themeName Name of the current theme.\n     * @return {Promise} object\n     */\n    Renderer.prototype.doRender = function(templateSource, context, themeName) {\n        this.currentThemeName = themeName;\n        var iconTemplate = iconSystem.getTemplateName();\n\n        var pendingPromise = new Pending('core/templates:doRender');\n        return this.getTemplate(iconTemplate).then(function() {\n            this.addHelpers(context, themeName);\n            var result = mustache.render(templateSource, context, this.partialHelper.bind(this));\n            return $.Deferred().resolve(result.trim(), this.getJS()).promise();\n        }.bind(this))\n        .then(function(html, js) {\n            if (this.requiredStrings.length > 0) {\n                return str.get_strings(this.requiredStrings).then(function(strings) {\n\n                    // Make sure string substitutions are done for the userdate\n                    // values as well.\n                    this.requiredDates = this.requiredDates.map(function(date) {\n                        return {\n                            timestamp: this.treatStringsInContent(date.timestamp, strings),\n                            format: this.treatStringsInContent(date.format, strings)\n                        };\n                    }.bind(this));\n\n                    // Why do we not do another call the render here?\n                    //\n                    // Because that would expose DOS holes. E.g.\n                    // I create an assignment called \"{{fish\" which\n                    // would get inserted in the template in the first pass\n                    // and cause the template to die on the second pass (unbalanced).\n                    html = this.treatStringsInContent(html, strings);\n                    js = this.treatStringsInContent(js, strings);\n                    return $.Deferred().resolve(html, js).promise();\n                }.bind(this));\n            }\n\n            return $.Deferred().resolve(html, js).promise();\n        }.bind(this))\n        .then(function(html, js) {\n            // This has to happen after the strings replacement because you can\n            // use the string helper in content for the user date helper.\n            if (this.requiredDates.length > 0) {\n                return UserDate.get(this.requiredDates).then(function(dates) {\n                    html = this.treatDatesInContent(html, dates);\n                    js = this.treatDatesInContent(js, dates);\n                    return $.Deferred().resolve(html, js).promise();\n                }.bind(this));\n            }\n\n            return $.Deferred().resolve(html, js).promise();\n        }.bind(this))\n        .then(function(html, js) {\n            pendingPromise.resolve();\n            return $.Deferred().resolve(html, js).promise();\n        });\n    };\n\n    /**\n     * Execute a block of JS returned from a template.\n     * Call this AFTER adding the template HTML into the DOM so the nodes can be found.\n     *\n     * @method runTemplateJS\n     * @param {string} source - A block of javascript.\n     */\n    var runTemplateJS = function(source) {\n        if (source.trim() !== '') {\n            var newscript = $('<script>').attr('type', 'text/javascript').html(source);\n            $('head').append(newscript);\n        }\n    };\n\n    /**\n     * Do some DOM replacement and trigger correct events and fire javascript.\n     *\n     * @method domReplace\n     * @private\n     * @param {JQuery} element - Element or selector to replace.\n     * @param {String} newHTML - HTML to insert / replace.\n     * @param {String} newJS - Javascript to run after the insertion.\n     * @param {Boolean} replaceChildNodes - Replace only the childnodes, alternative is to replace the entire node.\n     */\n    var domReplace = function(element, newHTML, newJS, replaceChildNodes) {\n        var replaceNode = $(element);\n        if (replaceNode.length) {\n            // First create the dom nodes so we have a reference to them.\n            var newNodes = $(newHTML);\n            var yuiNodes = null;\n            // Do the replacement in the page.\n            if (replaceChildNodes) {\n                // Cleanup any YUI event listeners attached to any of these nodes.\n                yuiNodes = new Y.NodeList(replaceNode.children().get());\n                yuiNodes.destroy(true);\n\n                // JQuery will cleanup after itself.\n                replaceNode.empty();\n                replaceNode.append(newNodes);\n            } else {\n                // Cleanup any YUI event listeners attached to any of these nodes.\n                yuiNodes = new Y.NodeList(replaceNode.get());\n                yuiNodes.destroy(true);\n\n                // JQuery will cleanup after itself.\n                replaceNode.replaceWith(newNodes);\n            }\n            // Run any javascript associated with the new HTML.\n            runTemplateJS(newJS);\n            // Notify all filters about the new content.\n            event.notifyFilterContentUpdated(newNodes);\n        }\n    };\n\n    /**\n     * Scan a template source for partial tags and return a list of the found partials.\n     *\n     * @method scanForPartials\n     * @private\n     * @param {string} templateSource - source template to scan.\n     * @return {Array} List of partials.\n     */\n    Renderer.prototype.scanForPartials = function(templateSource) {\n        var tokens = mustache.parse(templateSource),\n            partials = [];\n\n        var findPartial = function(tokens, partials) {\n            var i, token;\n            for (i = 0; i < tokens.length; i++) {\n                token = tokens[i];\n                if (token[0] == '>' || token[0] == '<') {\n                    partials.push(token[1]);\n                }\n                if (token.length > 4) {\n                    findPartial(token[4], partials);\n                }\n            }\n        };\n\n        findPartial(tokens, partials);\n\n        return partials;\n    };\n\n    /**\n     * Load a template and scan it for partials. Recursively fetch the partials.\n     *\n     * @method cachePartials\n     * @private\n     * @param {string} templateName - should consist of the component and the name of the template like this:\n     *                              core/menu (lib/templates/menu.mustache) or\n     *                              tool_bananas/yellow (admin/tool/bananas/templates/yellow.mustache)\n     * @param {Array} parentage - A list of requested partials in this render chain.\n     * @return {Promise} JQuery promise object resolved when all partials are in the cache.\n     */\n    Renderer.prototype.cachePartials = function(templateName, parentage) {\n        var searchKey = this.currentThemeName + '/' + templateName;\n\n        if (searchKey in cachePartialPromises) {\n            return cachePartialPromises[searchKey];\n        }\n\n        // This promise will not be resolved until all child partials are also resolved and ready.\n        // We create it here to allow us to check for recursive inclusion of templates.\n        // Keep track of the requested partials in this chain.\n        parentage = parentage || [searchKey];\n\n        cachePartialPromises[searchKey] = $.Deferred();\n\n        this.getTemplate(templateName)\n        .then(function(templateSource) {\n            var partials = this.scanForPartials(templateSource);\n            var uniquePartials = partials.filter(function(partialName) {\n                // Check for recursion.\n\n                if (parentage.indexOf(this.currentThemeName + '/' + partialName) >= 0) {\n                    // Ignore templates which include a parent template already requested in the current chain.\n                    return false;\n                }\n\n                // Ignore templates that include themselves.\n                return partialName != templateName;\n            }.bind(this));\n\n            // Fetch any partial which has not already been fetched.\n            var fetchThemAll = uniquePartials.map(function(partialName) {\n                parentage.push(this.currentThemeName + '/' + partialName);\n                return this.cachePartials(partialName, parentage);\n            }.bind(this));\n\n            // Resolve the templateName promise when all of the children are resolved.\n            return $.when.apply($, fetchThemAll)\n            .then(function() {\n                return cachePartialPromises[searchKey].resolve(templateSource);\n            });\n        }.bind(this))\n        .catch(cachePartialPromises[searchKey].reject);\n\n        return cachePartialPromises[searchKey];\n    };\n\n    /**\n     * Load a template and call doRender on it.\n     *\n     * @method render\n     * @private\n     * @param {string} templateName - should consist of the component and the name of the template like this:\n     *                              core/menu (lib/templates/menu.mustache) or\n     *                              tool_bananas/yellow (admin/tool/bananas/templates/yellow.mustache)\n     * @param {Object} context - Could be array, string or simple value for the context of the template.\n     * @param {string} themeName - Name of the current theme.\n     * @return {Promise} JQuery promise object resolved when the template has been rendered.\n     */\n    Renderer.prototype.render = function(templateName, context, themeName) {\n        if (typeof (themeName) === \"undefined\") {\n            // System context by default.\n            themeName = config.theme;\n        }\n\n        this.currentThemeName = themeName;\n\n        // Preload the module to do the icon rendering based on the theme iconsystem.\n        var modulename = config.iconsystemmodule;\n\n        var ready = $.Deferred();\n        require([modulename], function(System) {\n            var system = new System();\n            if (!(system instanceof IconSystem)) {\n                ready.reject('Invalid icon system specified' + config.iconsystem);\n            } else {\n                iconSystem = system;\n                system.init().then(ready.resolve).catch(notification.exception);\n            }\n        });\n\n        return ready.then(function() {\n                return this.cachePartials(templateName);\n            }.bind(this)).then(function(templateSource) {\n                return this.doRender(templateSource, context, themeName);\n            }.bind(this));\n    };\n\n    /**\n     * Prepend some HTML to a node and trigger events and fire javascript.\n     *\n     * @method domPrepend\n     * @private\n     * @param {jQuery|String} element - Element or selector to prepend HTML to\n     * @param {String} html - HTML to prepend\n     * @param {String} js - Javascript to run after we prepend the html\n     */\n    var domPrepend = function(element, html, js) {\n        var node = $(element);\n        if (node.length) {\n            // Prepend the html.\n            node.prepend(html);\n            // Run any javascript associated with the new HTML.\n            runTemplateJS(js);\n            // Notify all filters about the new content.\n            event.notifyFilterContentUpdated(node);\n        }\n    };\n\n    /**\n     * Append some HTML to a node and trigger events and fire javascript.\n     *\n     * @method domAppend\n     * @private\n     * @param {jQuery|String} element - Element or selector to append HTML to\n     * @param {String} html - HTML to append\n     * @param {String} js - Javascript to run after we append the html\n     */\n    var domAppend = function(element, html, js) {\n        var node = $(element);\n        if (node.length) {\n            // Append the html.\n            node.append(html);\n            // Run any javascript associated with the new HTML.\n            runTemplateJS(js);\n            // Notify all filters about the new content.\n            event.notifyFilterContentUpdated(node);\n        }\n    };\n\n    return /** @alias module:core/templates */ {\n        // Public variables and functions.\n        /**\n         * Every call to render creates a new instance of the class and calls render on it. This\n         * means each render call has it's own class variables.\n         *\n         * @method render\n         * @private\n         * @param {string} templateName - should consist of the component and the name of the template like this:\n         *                              core/menu (lib/templates/menu.mustache) or\n         *                              tool_bananas/yellow (admin/tool/bananas/templates/yellow.mustache)\n         * @param {Object} context - Could be array, string or simple value for the context of the template.\n         * @param {string} themeName - Name of the current theme.\n         * @return {Promise} JQuery promise object resolved when the template has been rendered.\n         */\n        render: function(templateName, context, themeName) {\n            var renderer = new Renderer();\n            return renderer.render(templateName, context, themeName);\n        },\n\n        /**\n         * Every call to renderIcon creates a new instance of the class and calls renderIcon on it. This\n         * means each render call has it's own class variables.\n         *\n         * @method renderIcon\n         * @public\n         * @param {string} key - Icon key.\n         * @param {string} component - Icon component\n         * @param {string} title - Icon title\n         * @return {Promise} JQuery promise object resolved when the pix has been rendered.\n         */\n        renderPix: function(key, component, title) {\n            var renderer = new Renderer();\n            return renderer.renderIcon(key, component, title);\n        },\n\n        /**\n         * Execute a block of JS returned from a template.\n         * Call this AFTER adding the template HTML into the DOM so the nodes can be found.\n         *\n         * @method runTemplateJS\n         * @param {string} source - A block of javascript.\n         */\n        runTemplateJS: runTemplateJS,\n\n        /**\n         * Replace a node in the page with some new HTML and run the JS.\n         *\n         * @method replaceNodeContents\n         * @param {JQuery} element - Element or selector to replace.\n         * @param {String} newHTML - HTML to insert / replace.\n         * @param {String} newJS - Javascript to run after the insertion.\n         */\n        replaceNodeContents: function(element, newHTML, newJS) {\n            domReplace(element, newHTML, newJS, true);\n        },\n\n        /**\n         * Insert a node in the page with some new HTML and run the JS.\n         *\n         * @method replaceNode\n         * @param {JQuery} element - Element or selector to replace.\n         * @param {String} newHTML - HTML to insert / replace.\n         * @param {String} newJS - Javascript to run after the insertion.\n         */\n        replaceNode: function(element, newHTML, newJS) {\n            domReplace(element, newHTML, newJS, false);\n        },\n\n        /**\n         * Prepend some HTML to a node and trigger events and fire javascript.\n         *\n         * @method prependNodeContents\n         * @param {jQuery|String} element - Element or selector to prepend HTML to\n         * @param {String} html - HTML to prepend\n         * @param {String} js - Javascript to run after we prepend the html\n         */\n        prependNodeContents: function(element, html, js) {\n            domPrepend(element, html, js);\n        },\n\n        /**\n         * Append some HTML to a node and trigger events and fire javascript.\n         *\n         * @method appendNodeContents\n         * @param {jQuery|String} element - Element or selector to append HTML to\n         * @param {String} html - HTML to append\n         * @param {String} js - Javascript to run after we append the html\n         */\n        appendNodeContents: function(element, html, js) {\n            domAppend(element, html, js);\n        }\n    };\n});\n"],"file":"templates.min.js"}